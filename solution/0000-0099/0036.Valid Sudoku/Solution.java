package com.solution._0036;

public class Solution {
    public static void main(String[] args) {

    }

    public boolean isValidSudoku(char[][] board) {
        boolean[][] row = new boolean[9][9];
        boolean[][] col = new boolean[9][9];
        boolean[][] sub = new boolean[9][9];
        for (int i = 0; i < 9; ++i) {
            for (int j = 0; j < 9; ++j) {
                char c = board[i][j];
                if (c == '.') {
                    continue;
                }
                int num = c - '0' - 1;
                /*
                使用 (i / 3) * 3 + j / 3 的目的是为了把整个数独划分为 9 个 3x3 的小宫，每个小宫根据其左上角的坐标可以表示为：
                (0,0) (0,1) (0,2)
                (1,0) (1,1) (1,2)
                (2,0) (2,1) (2,2)

                (0,3) (0,4) (0,5)
                (1,3) (1,4) (1,5)
                (2,3) (2,4) (2,5)

                (0,6) (0,7) (0,8)
                (1,6) (1,7) (1,8)
                (2,6) (2,7) (2,8)

                (3,0) (3,1) (3,2)
                (4,0) (4,1) (4,2)
                (5,0) (5,1) (5,2)

                (3,3) (3,4) (3,5)
                (4,3) (4,4) (4,5)
                (5,3) (5,4) (5,5)

                (3,6) (3,7) (3,8)
                (4,6) (4,7) (4,8)
                (5,6) (5,7) (5,8)

                (6,0) (6,1) (6,2)
                (7,0) (7,1) (7,2)
                (8,0) (8,1) (8,2)

                (6,3) (6,4) (6,5)
                (7,3) (7,4) (7,5)
                (8,3) (8,4) (8,5)

                (6,6) (6,7) (6,8)
                (7,6) (7,7) (7,8)
                (8,6) (8,7) (8,8)
当我们需要判断一个数 (i, j) 是否在某个小宫中时，可以根据其所处的行号 i 和列号 j 计算出该小宫的左上角坐标 (r, c)，然后判断 (i, j) 是否属于该小宫即可。
例如，当 (i, j) = (4, 7) 时，可以计算出 (r, c) = (3, 6)，然后判断 (4, 7) 是否属于小宫 (3, 6) 即可。
由于每个小宫的左上角坐标都是 (0, 0)、(0, 3)、(0, 6)、(3, 0)、(3, 3)、(3, 6)、(6, 0)、(6, 3)、(6, 6)，因此可以用 (i / 3) * 3 + j / 3 的式子来计算出 (i, j) 所属的小宫编号。
                 */
                int k = i / 3 * 3 + j / 3;
                if (row[i][num] || col[j][num] || sub[k][num]) {
                    return false;
                }
                row[i][num] = true;
                col[j][num] = true;
                sub[k][num] = true;
            }
        }
        return true;
    }
}
